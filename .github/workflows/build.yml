name: Build

on: [push]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  EXTENSION_NAME: error_message_format

jobs:
  linux:
    runs-on: ${{ matrix.builder }}
    strategy:
      matrix:
        include:
        -
          builder: ubuntu-latest
          target: x86_64-unknown-linux-gnu
          platform: amd64
          php-version: '8.0'
          distro: bullseye
        -
          builder: buildjet-4vcpu-ubuntu-2204-arm
          target: aarch64-unknown-linux-gnu
          platform: arm64
          php-version: '8.0'
          distro: bullseye
        -
          builder: ubuntu-latest
          target: x86_64-unknown-linux-gnu
          platform: amd64
          php-version: '8.1'
        -
          builder: buildjet-4vcpu-ubuntu-2204-arm
          target: aarch64-unknown-linux-gnu
          platform: arm64
          php-version: '8.1'
        -
          builder: ubuntu-latest
          target: x86_64-unknown-linux-gnu
          platform: amd64
          php-version: '8.2'
        -
          builder: buildjet-4vcpu-ubuntu-2204-arm
          target: aarch64-unknown-linux-gnu
          platform: arm64
          php-version: '8.2'
        -
          builder: ubuntu-latest
          target: x86_64-unknown-linux-gnu
          platform: amd64
          php-version: '8.3'
        -
          builder: buildjet-4vcpu-ubuntu-2204-arm
          target: aarch64-unknown-linux-gnu
          platform: arm64
          php-version: '8.3'
        -
          builder: ubuntu-latest
          target: x86_64-unknown-linux-gnu
          platform: amd64
          php-version: '8.4'
        -
          builder: buildjet-4vcpu-ubuntu-2204-arm
          target: aarch64-unknown-linux-gnu
          platform: arm64
          php-version: '8.4'
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache-key: ${{ matrix.target }}-${{ matrix.php-version }}-${{ matrix.platform }}-${{ matrix.distro }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: none

      - name: Generate version for tag
        if: github.ref_type == 'tag'
        run: echo "ERROR_MESSAGE_FORMAT_VERSION=${{github.ref_name}}" >> $GITHUB_ENV

      - run: php -i -c tests/php.ini

      - name: Generate version for branch
        if: github.ref_type == 'branch'
        run: echo "ERROR_MESSAGE_FORMAT_VERSION=0.0.1+${{github.ref_name}}" | sed 's!/!-!g' >> $GITHUB_ENV

      - name: Update Cargo.toml version
        run: sed -i "s/^version = .*/version = \"${{ env.ERROR_MESSAGE_FORMAT_VERSION }}\"/" Cargo.toml

      - uses: mxschmitt/action-tmate@v3
        if: runner.debug == '1'

      - name: Test
        run: cargo test -- --nocapture

      - run: cargo build --release --target ${{ matrix.target }}

      - run: ls -la target/${{ matrix.target }}/release/
      - name: Rename file
        run: cp target/${{ matrix.target }}/release/lib${{ env.EXTENSION_NAME }}.so php${{ matrix.php-version }}-${{ matrix.target }}-${{ env.EXTENSION_NAME }}.so

      - uses: actions/upload-artifact@v4
        with:
          name: php${{ matrix.php-version }}-${{ matrix.target }}
          path: php${{ matrix.php-version }}-${{ matrix.target }}-${{ env.EXTENSION_NAME }}.so
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            php${{ matrix.php-version }}-${{ matrix.target }}-${{ env.EXTENSION_NAME }}.so
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  macos:
    runs-on: macos-14
    strategy:
      matrix:
        target: [aarch64-apple-darwin, x86_64-apple-darwin]
        php-version: ['8.0', '8.1', '8.2', '8.3', '8.4']

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install latest rust toolchain
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

      - name: Install the target
        run: rustup target add ${{ matrix.target }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}

      - run: php -i -c tests/php.ini
      - name: Generate version for tag
        if: github.ref_type == 'tag'
        run: echo "ERROR_MESSAGE_FORMAT_VERSION=${{github.ref_name}}" >> $GITHUB_ENV

      - name: Generate version for branch
        if: github.ref_type == 'branch'
        run: echo "ERROR_MESSAGE_FORMAT_VERSION=0.0.1+${{github.ref_name}}" | sed 's!/!-!g' >> $GITHUB_ENV

      - name: Update Cargo.toml version
        run: sed -i .bak "s/^version = .*/version = \"${{ env.ERROR_MESSAGE_FORMAT_VERSION }}\"/" Cargo.toml

      - name: Test
        run: cargo test -- --nocapture

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Rename file
        run: mv target/${{ matrix.target }}/release/lib${{ env.EXTENSION_NAME }}.dylib target/php${{ matrix.php-version }}-${{ matrix.target }}-${{ env.EXTENSION_NAME }}.dylib

      - uses: actions/upload-artifact@v4
        with:
          name: php${{ matrix.php-version }}-${{ matrix.target }}
          path: target/php${{ matrix.php-version }}-${{ matrix.target }}-${{ env.EXTENSION_NAME }}.dylib
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/php${{ matrix.php-version }}-${{ matrix.target }}-${{ env.EXTENSION_NAME }}.dylib
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
