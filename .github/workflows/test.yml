name: Test

on: [push]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  EXTENSION_NAME: error-message-format

jobs:
  linux:
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        credentials:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        ports:
          - 5000:5000
    strategy:
      matrix:
        include:
        -
          target: x86_64-unknown-linux-gnu
          platform: linux/amd64
          php-version: '8.0'
          distro: bullseye
        # -
        #   os: ubuntu-latest
        #   target: aarch64-unknown-linux-gnu
        #   platform: linux/arm64
        #   php-version: '8.0'
        -
          target: x86_64-unknown-linux-gnu
          platform: linux/amd64
          php-version: '8.1'
        # -
        #   os: ubuntu-latest
        #   target: aarch64-unknown-linux-gnu
        #   platform: linux/arm64
        #   php-version: '8.1'
        -
          target: x86_64-unknown-linux-gnu
          platform: linux/amd64
          php-version: '8.2'
        # -
        #   os: ubuntu-latest
        #   target: aarch64-unknown-linux-gnu
        #   platform: linux/arm64
        #   php-version: '8.2'
        -
          target: x86_64-unknown-linux-gnu
          platform: linux/amd64
          php-version: '8.3'
        -
          target: x86_64-unknown-linux-gnu
          platform: linux/amd64
          php-version: '8.4'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host

      - name: Setup docker
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: ${{ matrix.platform }}
          push: true
          tags: localhost:5000/php-build:latest
          build-args: |
            FROM_PHP=${{ matrix.php-version }}
            FROM_DISTRO=${{ matrix.distro || 'bookworm' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test
        run: docker run -v ~/.cargo/registry:/root/.cargo/registry -v ~/.cargo/git:/root/.cargo/git --platform ${{ matrix.platform }} --rm -v $PWD:/code localhost:5000/php-build:latest bash -c 'rustup target add ${{ matrix.target }} ; cargo clippy --all-targets --all-features ; cargo test'
